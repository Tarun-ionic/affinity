name: E2E Test and deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup docker-compose stack
        run: 'npm run ci:run-parse'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: './node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install ionic
        run: npm install @ionic/cli
      - name: Install dependencies
        run: npm install
      # Runs
      - name: Check docker
        run: docker ps -a && docker-compose logs --tail 10
      - name: Set up DB
        run: 'npm run ci:setup-db'
      - name: Running e2e with cypress
        uses: cypress-io/github-action@v2
        with:
          ## FIXME: run this against the locally deployed version?
          start: npm run serve
          # quote the url to be safe against YML parsing surprises
          wait-on: 'http://localhost:8080'

  release-build:
    runs-on: ubuntu-latest
    environment: b4a_deploy

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: './node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install ionic
        run: npm install @ionic/cli
      - name: Install dependencies
        run: npm install
      - name: Build locally
        run: |
          npm run build -- --prod

        env:
          VUE_APP_DEFAULT_TEAM: ${{ secrets.VUE_APP_DEFAULT_TEAM}}
          VUE_APP_PARSE_APP_ID: ${{ secrets.VUE_APP_PARSE_APP_ID}}
          VUE_APP_PARSE_JS_KEY: ${{ secrets.VUE_APP_PARSE_JS_KEY}}
          VUE_APP_PARSE_URL: ${{ secrets.VUE_APP_PARSE_URL}}
          VUE_APP_PARSE_LIVE_URL: ${{ secrets.VUE_APP_PARSE_LIVE_URL }}
      - name: Archive /dist
        uses: actions/upload-artifact@v2
        with:
          name: dist-production
          path: |
            dist

  android-app:
    runs-on: ubuntu-latest
    needs: release-build
    steps:
      - uses: actions/checkout@v2
      - name: Download /dist
        uses: actions/download-artifact@v2
        with:
          name: dist-production
          path: dist
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: './node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install capacitor
        run: npm install capacitor
      - name: Sync assets
        run: npx cap sync android
      - uses: sparkfabrik/android-build-action@v1.0.0
        with:
          project-path: android
          output-path: android-app.apk
      - name: Archive Android App
        uses: actions/upload-artifact@v2
        with:
          name: android-app
          path: |
            android-app.apk

  ios-app:
    runs-on: macos-latest
    needs: release-build
    steps:
      - uses: actions/checkout@v2
      - name: Download /dist
        uses: actions/download-artifact@v2
        with:
          name: dist-production
          path: dist
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: './node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install capacitor
        run: npm install capacitor
      - name: Sync assets
        run: npx cap sync ios
      - uses: sparkfabrik/ios-build-action@v1.1.0
        continue-on-error: true
        with:
          project-path: ios/App/App.xcodeproj
          p12-base64: ${{ secrets.P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          team-id: ${{ secrets.TEAM_ID }}
          workspace-path: ios/App/App.xcworkspace # optional
          output-path: 'ios-app.ipa'
      - name: Archive iOS App
        uses: actions/upload-artifact@v2
        with:
          name: ios-app
          path: |
            ios-app.ipa

  deploy:
    runs-on: ubuntu-latest
    needs: [ tests, release-build, android-app ] # ios-app
    if: github.event_name == 'push' # only if this was a push on 'main'
    steps:
      - uses: actions/checkout@v2
      - name: Install Back4Appp
        run: |
          curl https://raw.githubusercontent.com/back4app/parse-cli/back4app/installer.sh | sudo /bin/bash
          alias b4a=/usr/local/bin/b4a
      - name: Configure Back4App
        run: echo ${{ secrets.B4A_ACCOUNT_KEY}} | b4a configure accountkey
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: './node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install capacitor
        run: npm install
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: dist-production
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: android-app
          path: android-app.apk
      - name: Copy App to asset
        run: |
          mkdir -p dist/assets/apps
          mv android-app.apk dist/assets/apps
      - name: Build Cloud
        run: |
          cd backend/cloud
          npm install
      - name: Deploy db
        run: |
          npm run deploy:db
        env:
          VUE_APP_DEFAULT_TEAM: ${{ secrets.VUE_APP_DEFAULT_TEAM}}
          VUE_APP_PARSE_APP_ID: ${{ secrets.VUE_APP_PARSE_APP_ID}}
          VUE_APP_PARSE_JS_KEY: ${{ secrets.VUE_APP_PARSE_JS_KEY}}
          VUE_APP_PARSE_MASTER_KEY: ${{ secrets.VUE_APP_PARSE_MASTER_KEY}}
          VUE_APP_PARSE_URL: ${{ secrets.VUE_APP_PARSE_URL}}
          VUE_APP_PARSE_LIVE_URL: ${{ secrets.VUE_APP_PARSE_LIVE_URL }}
      - name: Deploy Cloud Code & Apps
        run: |
          cd backend
          b4a deploy affinity
